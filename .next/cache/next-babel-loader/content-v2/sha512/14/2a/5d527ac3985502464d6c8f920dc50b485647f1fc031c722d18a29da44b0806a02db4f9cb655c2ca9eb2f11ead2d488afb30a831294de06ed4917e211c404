{"ast":null,"code":"import Layout from '../components/Layout';\nimport client from '../components/ApolloClient';\nimport Product from '../components/Product';\nimport { Card, Container, Col, Row } from 'react-bootstrap';\nimport gql from 'graphql-tag'; // const PRODUCTS_QUERY = gql`query{\n//         products(first: 20) {\n//             nodes {\n//                 id\n//                 databaseId\n//                 averageRating\n//                 slug\n//                 description\n//                 image {\n//                     uri\n//                     title\n//                     srcSet\n//                     sourceUrl\n//                 }\n//             name\n//             }\n//         }\n// }`;\n// const Index = ( props ) => {\n//     const { products } = props;\n//     return (\n//         <Layout>\n//             <Container>\n//                 <Row className=\"product-container\">\n//                     { products.length ? (\n//                         products.map( product => <Product key={ product.id } product={ product } /> )\n//                     ) : ''}\n//                 </Row>\n//             </Container>\n//         </Layout>\n//     )\n// };\n// Index.getInitialProps = async () => {\n//     const result = await client.query( { query: PRODUCTS_QUERY })\n//     return {\n//         products: result.data.products.nodes\n//     }\n// };\n// export default Index;\n\nexport async function getStaticProps() {\n  return {\n    props: {\n      launches: []\n    }\n  };\n}\nexport default function Home({\n  launches\n}) {\n  console.log('launches', launches);\n}\n;","map":{"version":3,"sources":["C:/Users/coolv/OneDrive/Desktop/Plantisserie/pages/index.js"],"names":["Layout","client","Product","Card","Container","Col","Row","gql","getStaticProps","props","launches","Home","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA2C,iBAA3C;AAEA,OAAOC,GAAP,MAAgB,aAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,OAAO,eAAeC,cAAf,GAAgC;AACnC,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL;AADF,GAAP;AAKD;AAED,eAAe,SAASC,IAAT,CAAc;AAAED,EAAAA;AAAF,CAAd,EAA4B;AACzCE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACD;AAAA","sourcesContent":["import Layout from '../components/Layout';\r\n\r\nimport client from '../components/ApolloClient';\r\n\r\nimport Product from '../components/Product';\r\n\r\nimport { Card, Container, Col, Row  } from 'react-bootstrap';\r\n\r\nimport gql from 'graphql-tag';\r\n\r\n// const PRODUCTS_QUERY = gql`query{\r\n//         products(first: 20) {\r\n//             nodes {\r\n//                 id\r\n//                 databaseId\r\n//                 averageRating\r\n//                 slug\r\n//                 description\r\n//                 image {\r\n//                     uri\r\n//                     title\r\n//                     srcSet\r\n//                     sourceUrl\r\n//                 }\r\n//             name\r\n//             }\r\n//         }\r\n// }`;\r\n\r\n// const Index = ( props ) => {\r\n\r\n//     const { products } = props;\r\n\r\n//     return (\r\n//         <Layout>\r\n//             <Container>\r\n//                 <Row className=\"product-container\">\r\n//                     { products.length ? (\r\n//                         products.map( product => <Product key={ product.id } product={ product } /> )\r\n//                     ) : ''}\r\n//                 </Row>\r\n//             </Container>\r\n//         </Layout>\r\n//     )\r\n// };\r\n\r\n// Index.getInitialProps = async () => {\r\n//     const result = await client.query( { query: PRODUCTS_QUERY })\r\n//     return {\r\n//         products: result.data.products.nodes\r\n//     }\r\n// };\r\n\r\n// export default Index;\r\n\r\n\r\nexport async function getStaticProps() {\r\n    return {\r\n      props: {\r\n        launches: []\r\n      }\r\n    }\r\n  }\r\n\r\n  export default function Home({ launches }) {\r\n    console.log('launches', launches);\r\n  };"]},"metadata":{},"sourceType":"module"}