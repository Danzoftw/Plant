{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/coolv/OneDrive/Desktop/Plantisserie/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"C:/Users/coolv/OneDrive/Desktop/Plantisserie/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"C:/Users/coolv/OneDrive/Desktop/Plantisserie/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\coolv\\\\OneDrive\\\\Desktop\\\\Plantisserie\\\\pages\\\\product.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query Product( $id: Int ! ){\\n        productBy( databaseId: $id){\\n            id\\n            databaseId\\n            averageRating\\n            slug\\n            description\\n            image {\\n                uri\\n                title\\n                srcSet\\n                sourceUrl\\n            }\\n            name\\n        }\\n    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport { withRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\nvar Product = withRouter(_c = function _c(props) {\n  console.warn(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Product\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n});\n_c2 = Product;\n\nProduct.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var slug, id, PRODUCTS_QUERY, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            slug = context.query.slug;\n            id = slug ? parseInt(slug.split('-').pop()) : context.query.id;\n            console.warn(product.slug);\n            PRODUCTS_QUERY = gql(_templateObject());\n            _context.next = 6;\n            return client.query({\n              query: PRODUCTS_QUERY,\n              variables: {\n                id: id\n              }\n            });\n\n          case 6:\n            res = _context.sent;\n            return _context.abrupt(\"return\", {\n              product: res.data.productBy\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Product;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product$withRouter\");\n$RefreshReg$(_c2, \"Product\");","map":{"version":3,"sources":["C:/Users/coolv/OneDrive/Desktop/Plantisserie/pages/product.js"],"names":["Link","Layout","withRouter","client","gql","Product","props","console","warn","getInitialProps","context","slug","query","id","parseInt","split","pop","product","PRODUCTS_QUERY","variables","res","data","productBy"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,OAAO,GAAGH,UAAU,MAAG,YAAAI,KAAK,EAAK;AAClCC,EAAAA,OAAO,CAACC,IAAR,CAAcF,KAAd;AACD,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ;AAIH,CANyB,CAA1B;MAAMD,O;;AAQNA,OAAO,CAACI,eAAR;AAAA,sEAA0B,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,IAFQ,GAEGD,OAFH,CAEjBE,KAFiB,CAERD,IAFQ;AAGhBE,YAAAA,EAHgB,GAGXF,IAAI,GAAGG,QAAQ,CAAEH,IAAI,CAACI,KAAL,CAAY,GAAZ,EAAkBC,GAAlB,EAAF,CAAX,GAAyCN,OAAO,CAACE,KAAR,CAAcC,EAHhD;AAKtBN,YAAAA,OAAO,CAACC,IAAR,CAAaS,OAAO,CAACN,IAArB;AAEMO,YAAAA,cAPgB,GAOCd,GAPD;AAAA;AAAA,mBAwBJD,MAAM,CAACS,KAAP,CAAc;AAC5BA,cAAAA,KAAK,EAAEM,cADqB;AAE5BC,cAAAA,SAAS,EAAE;AAAEN,gBAAAA,EAAE,EAAFA;AAAF;AAFiB,aAAd,CAxBI;;AAAA;AAwBhBO,YAAAA,GAxBgB;AAAA,6CA4Bf;AACHH,cAAAA,OAAO,EAAEG,GAAG,CAACC,IAAJ,CAASC;AADf,aA5Be;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAiCA,eAAejB,OAAf","sourcesContent":["import Link from 'next/link';\r\nimport Layout from '../components/Layout';\r\nimport { withRouter } from 'next/router';\r\nimport client from \"../components/ApolloClient\";\r\nimport gql from 'graphql-tag';\r\n\r\nconst Product = withRouter ( props  => {\r\n     console.warn( props );\r\n    return(\r\n       \r\n        <div>Product</div>\r\n    )\r\n});\r\n\r\nProduct.getInitialProps = async function( context ){\r\n\r\n    let{ query: { slug } } = context;\r\n    const id = slug ? parseInt( slug.split( '-' ).pop() ) : context.query.id;\r\n\r\n    console.warn(product.slug);\r\n\r\n    const PRODUCTS_QUERY = gql`query Product( $id: Int ! ){\r\n        productBy( databaseId: $id){\r\n            id\r\n            databaseId\r\n            averageRating\r\n            slug\r\n            description\r\n            image {\r\n                uri\r\n                title\r\n                srcSet\r\n                sourceUrl\r\n            }\r\n            name\r\n        }\r\n    }`;\r\n\r\n    const res = await client.query(({\r\n        query: PRODUCTS_QUERY,\r\n        variables: { id }\r\n    }));\r\n    return {\r\n        product: res.data.productBy\r\n    }\r\n};\r\n\r\nexport default Product;"]},"metadata":{},"sourceType":"module"}