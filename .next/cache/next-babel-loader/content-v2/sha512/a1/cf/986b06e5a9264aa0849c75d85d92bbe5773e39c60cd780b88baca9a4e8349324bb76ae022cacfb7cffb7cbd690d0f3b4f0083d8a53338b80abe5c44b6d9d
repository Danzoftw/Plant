{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\coolv\\\\OneDrive\\\\Desktop\\\\Plantisserie\\\\pages\\\\index.js\";\nimport Layout from '../components/Layout';\nimport client from '../components/ApolloClient';\nimport Product from '../components/Product';\nimport { Card, Container, Col, Row } from 'react-bootstrap';\nimport gql from 'graphql-tag';\nconst PRODUCTS_QUERY = gql`query{\n        products(first: 20) {\n            nodes {\n                id\n                averageRating\n                slug\n                description\n                image {\n                uri\n                title\n                srcSet\n                sourceUrl\n                }\n                name\n            }\n        }\n}`;\n\nconst Index = props => {\n  console.warn(props);\n  const {\n    products\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"product-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\nIndex.getInitialProps = async () => {\n  const result = await client.query({\n    PRODUCTS_QUERY\n  });\n  return {\n    products: result.data.products.nodes\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/coolv/OneDrive/Desktop/Plantisserie/pages/index.js"],"names":["Layout","client","Product","Card","Container","Col","Row","gql","PRODUCTS_QUERY","Index","props","console","warn","products","getInitialProps","result","query","data","nodes"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA2C,iBAA3C;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,cAAc,GAAGD,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAhBA;;AAkBA,MAAME,KAAK,GAAKC,KAAF,IAAa;AACvBC,EAAAA,OAAO,CAACC,IAAR,CAAcF,KAAd;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAeH,KAArB;AAEA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAdD;;AAgBAD,KAAK,CAACK,eAAN,GAAwB,YAAY;AAChC,QAAMC,MAAM,GAAG,MAAMd,MAAM,CAACe,KAAP,CAAc;AAAER,IAAAA;AAAF,GAAd,CAArB;AACA,SAAO;AACHK,IAAAA,QAAQ,EAAEE,MAAM,CAACE,IAAP,CAAYJ,QAAZ,CAAqBK;AAD5B,GAAP;AAGH,CALD;;AAOA,eAAeT,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\n\r\nimport client from '../components/ApolloClient';\r\n\r\nimport Product from '../components/Product';\r\n\r\nimport { Card, Container, Col, Row  } from 'react-bootstrap';\r\n\r\nimport gql from 'graphql-tag';\r\n\r\nconst PRODUCTS_QUERY = gql`query{\r\n        products(first: 20) {\r\n            nodes {\r\n                id\r\n                averageRating\r\n                slug\r\n                description\r\n                image {\r\n                uri\r\n                title\r\n                srcSet\r\n                sourceUrl\r\n                }\r\n                name\r\n            }\r\n        }\r\n}`;\r\n\r\nconst Index = ( props ) => {\r\n    console.warn( props );\r\n\r\n    const { products } = props;\r\n\r\n    return (\r\n        <Layout>\r\n            <Row className=\"product-container\">\r\n                {/* { products.length ? (\r\n                    products.map( product => <Product key={ product.id } product={ product } /> )\r\n                ) : ''} */}\r\n            </Row>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n    const result = await client.query( { PRODUCTS_QUERY })\r\n    return {\r\n        products: result.data.products.nodes\r\n    }\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}