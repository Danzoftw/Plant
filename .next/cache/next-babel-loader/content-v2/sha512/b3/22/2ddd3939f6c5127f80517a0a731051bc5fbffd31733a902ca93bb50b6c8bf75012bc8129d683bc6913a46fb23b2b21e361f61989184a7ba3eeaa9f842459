{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\coolv\\\\OneDrive\\\\Desktop\\\\Plantisserie\\\\pages\\\\product.js\";\nimport Link from 'next/link';\nimport Layout from \"../components/Layout\";\nimport { useRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag'; // const Product = useRouter  ( props  => {\n//      console.warn( props );\n//     return(\n//         <div>Product</div>\n//     )\n// });\n// Product.getInitialProps = async function( context ){\n//     let{ query: { slug } } = context;\n//     const id = slug ? parseInt( slug.split( '-' ).pop() ) : context.query.id;\n//     const PRODUCTS_QUERY = gql` query Product( $id: Int ! ){\n//         productBy( productId: $id){\n//             id\n//             databaseId\n//             averageRating\n//             slug\n//             description\n//             image {\n//                 uri\n//                 title\n//                 srcSet\n//                 sourceUrl\n//             }\n//             name\n//         }\n//     }`;\n//     const res = await client.query(({\n//         query: PRODUCTS_QUERY,\n//         variables: { id }\n//     }));\n//     return {\n//         product: res.data.productBy\n//     }\n// };\n\nconst Post = () => {\n  const router = useRouter();\n  const id = slug ? parseInt(slug.split('-').pop()) : context.query.id;\n  const {\n    pid\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Post: \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n};\n\nexport default Post; // export default Product;","map":{"version":3,"sources":["C:/Users/coolv/OneDrive/Desktop/Plantisserie/pages/product.js"],"names":["Link","Layout","useRouter","client","gql","Post","router","id","slug","parseInt","split","pop","context","query","pid"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,EAAE,GAAGC,IAAI,GAAGC,QAAQ,CAAED,IAAI,CAACE,KAAL,CAAY,GAAZ,EAAkBC,GAAlB,EAAF,CAAX,GAAyCC,OAAO,CAACC,KAAR,CAAcN,EAAtE;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAUR,MAAM,CAACO,KAAvB;AAEA,sBAAO;AAAA,yBAAUN,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CANH;;AAQE,eAAeF,IAAf,C,CAMF","sourcesContent":["import Link from 'next/link';\r\nimport Layout from \"../components/Layout\";\r\nimport { useRouter  } from 'next/router';\r\nimport client from \"../components/ApolloClient\";\r\nimport gql from 'graphql-tag';\r\n\r\n// const Product = useRouter  ( props  => {\r\n//      console.warn( props );\r\n//     return(\r\n//         <div>Product</div>\r\n//     )\r\n// });\r\n\r\n// Product.getInitialProps = async function( context ){\r\n\r\n//     let{ query: { slug } } = context;\r\n//     const id = slug ? parseInt( slug.split( '-' ).pop() ) : context.query.id;\r\n\r\n//     const PRODUCTS_QUERY = gql` query Product( $id: Int ! ){\r\n//         productBy( productId: $id){\r\n//             id\r\n//             databaseId\r\n//             averageRating\r\n//             slug\r\n//             description\r\n//             image {\r\n//                 uri\r\n//                 title\r\n//                 srcSet\r\n//                 sourceUrl\r\n//             }\r\n//             name\r\n//         }\r\n//     }`;\r\n\r\n//     const res = await client.query(({\r\n//         query: PRODUCTS_QUERY,\r\n//         variables: { id }\r\n//     }));\r\n//     return {\r\n//         product: res.data.productBy\r\n//     }\r\n// };\r\n\r\nconst Post = () => {\r\n    const router = useRouter()\r\n    const id = slug ? parseInt( slug.split( '-' ).pop() ) : context.query.id;\r\n    const { pid } = router.query\r\n  \r\n    return <p>Post: {id}</p>\r\n  }\r\n  \r\n  export default Post\r\n\r\n\r\n\r\n\r\n\r\n// export default Product;"]},"metadata":{},"sourceType":"module"}