{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\coolv\\\\OneDrive\\\\Desktop\\\\Plantisserie\\\\pages\\\\product.js\";\nimport Link from 'next/link';\nimport Layout from \"../components/Layout\";\nimport { useRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\n\nconst Product = () => {\n  console.warn(props);\n  const router = useRouter();\n  const {\n    Product\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Product\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\nproduct.getInitialProps = async function (context) {\n  let {\n    query: {\n      slug\n    }\n  } = context;\n  const id = slug ? parseInt(slug.split('-').pop()) : context.query.id;\n  const PRODUCTS_QUERY = gql` query Product( $id: Int ! ){\n        productBy( productId: $id){\n            id\n            databaseId\n            averageRating\n            slug\n            description\n            image {\n                uri\n                title\n                srcSet\n                sourceUrl\n            }\n            name\n        }\n    }`;\n  const res = await client.query({\n    query: PRODUCTS_QUERY,\n    variables: {\n      id\n    }\n  });\n  return {\n    product: res.data.productBy\n  };\n};\n\nexport default Product;","map":{"version":3,"sources":["C:/Users/coolv/OneDrive/Desktop/Plantisserie/pages/product.js"],"names":["Link","Layout","useRouter","client","gql","Product","console","warn","props","router","query","product","getInitialProps","context","slug","id","parseInt","split","pop","PRODUCTS_QUERY","res","variables","data","productBy"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,OAAO,GAAI,MAAM;AAClBC,EAAAA,OAAO,CAACC,IAAR,CAAcC,KAAd;AACA,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcI,MAAM,CAACC,KAA3B;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAPD;;AASAC,OAAO,CAACC,eAAR,GAA0B,gBAAgBC,OAAhB,EAAyB;AAE/C,MAAG;AAAEH,IAAAA,KAAK,EAAE;AAAEI,MAAAA;AAAF;AAAT,MAAsBD,OAAzB;AACA,QAAME,EAAE,GAAGD,IAAI,GAAGE,QAAQ,CAAEF,IAAI,CAACG,KAAL,CAAY,GAAZ,EAAkBC,GAAlB,EAAF,CAAX,GAAyCL,OAAO,CAACH,KAAR,CAAcK,EAAtE;AAEA,QAAMI,cAAc,GAAGf,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAfI;AAiBA,QAAMgB,GAAG,GAAG,MAAMjB,MAAM,CAACO,KAAP,CAAc;AAC5BA,IAAAA,KAAK,EAAES,cADqB;AAE5BE,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AAFiB,GAAd,CAAlB;AAIA,SAAO;AACHJ,IAAAA,OAAO,EAAES,GAAG,CAACE,IAAJ,CAASC;AADf,GAAP;AAGH,CA7BD;;AAgCA,eAAelB,OAAf","sourcesContent":["import Link from 'next/link';\r\nimport Layout from \"../components/Layout\";\r\nimport { useRouter  } from 'next/router';\r\nimport client from \"../components/ApolloClient\";\r\nimport gql from 'graphql-tag';\r\n\r\nconst Product =  () => {\r\n     console.warn( props );\r\n     const router = useRouter()\r\n     const { Product } = router.query\r\n    return(\r\n        <div>Product</div>\r\n    )\r\n}\r\n\r\nproduct.getInitialProps = async function( context ){\r\n\r\n    let{ query: { slug } } = context;\r\n    const id = slug ? parseInt( slug.split( '-' ).pop() ) : context.query.id;\r\n\r\n    const PRODUCTS_QUERY = gql` query Product( $id: Int ! ){\r\n        productBy( productId: $id){\r\n            id\r\n            databaseId\r\n            averageRating\r\n            slug\r\n            description\r\n            image {\r\n                uri\r\n                title\r\n                srcSet\r\n                sourceUrl\r\n            }\r\n            name\r\n        }\r\n    }`;\r\n\r\n    const res = await client.query(({\r\n        query: PRODUCTS_QUERY,\r\n        variables: { id }\r\n    }));\r\n    return {\r\n        product: res.data.productBy\r\n    }\r\n};\r\n\r\n\r\nexport default Product;"]},"metadata":{},"sourceType":"module"}