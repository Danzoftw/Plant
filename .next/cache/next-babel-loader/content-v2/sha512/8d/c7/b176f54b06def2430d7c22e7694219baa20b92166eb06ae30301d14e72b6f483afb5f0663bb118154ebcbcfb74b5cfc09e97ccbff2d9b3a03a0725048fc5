{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/coolv/OneDrive/Desktop/Plantisserie/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/coolv/OneDrive/Desktop/Plantisserie/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\coolv\\\\OneDrive\\\\Desktop\\\\Plantisserie\\\\pages\\\\index.js\",\n    _this = this;\n\nimport Layout from '../components/Layout';\nimport clientConfig from '../client-config';\nimport fetch from 'isomorphic-unfetch';\nimport Product from '../components/Products';\n\nvar Index = function Index(props) {\n  console.warn(props);\n  var products = props.products;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-container\",\n      children: products.length ? products.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 46\n        }, _this);\n      }) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, productsData;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"\".concat(clientConfig.siteUrl, \"/getProducts\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          productsData = _context.sent;\n          return _context.abrupt(\"return\", {\n            products: productsData\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/coolv/OneDrive/Desktop/Plantisserie/pages/index.js"],"names":["Layout","clientConfig","fetch","Product","Index","props","console","warn","products","length","map","product","id","getInitialProps","siteUrl","res","json","productsData"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAEC,KAAF,EAAa;AACvBC,EAAAA,OAAO,CAACC,IAAR,CAAcF,KAAd;AADuB,MAGfG,QAHe,GAGFH,KAHE,CAGfG,QAHe;AAKvB,sBACI,QAAC,MAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACMA,QAAQ,CAACC,MAAT,GACED,QAAQ,CAACE,GAAT,CAAc,UAAAC,OAAO;AAAA,4BAAI,QAAC,OAAD;AAA4B,UAAA,OAAO,EAAGA;AAAtC,WAAeA,OAAO,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA,iBAAJ;AAAA,OAArB,CADF,GAEE;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAdD;;KAAMR,K;AAgBNA,KAAK,CAACS,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFX,KAAK,WAAKD,YAAY,CAACa,OAAlB,kBADH;;AAAA;AACdC,UAAAA,GADc;AAAA;AAAA,iBAEOA,GAAG,CAACC,IAAJ,EAFP;;AAAA;AAEdC,UAAAA,YAFc;AAAA,2CAGb;AACHT,YAAAA,QAAQ,EAAES;AADP,WAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAQA,eAAeb,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\n\r\nimport clientConfig from '../client-config';\r\n\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport Product from '../components/Products';\r\n\r\nconst Index = ( props ) => {\r\n    console.warn( props );\r\n\r\n    const { products } = props;\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"product-container\">\r\n                { products.length ? (\r\n                    products.map( product => <Product key={ product.id } product={ product } /> )\r\n                ) : ''}\r\n            </div>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n    const res = await fetch( `${clientConfig.siteUrl}/getProducts` )\r\n    const productsData = await res.json();\r\n    return {\r\n        products: productsData\r\n    }\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}