{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/coolv/OneDrive/Desktop/Plantisserie/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"C:/Users/coolv/OneDrive/Desktop/Plantisserie/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"C:/Users/coolv/OneDrive/Desktop/Plantisserie/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\" query Product( $id: Int ! ){\\n        productBy( productId: $id){\\n            id\\n            databaseId\\n            averageRating\\n            slug\\n            description\\n            image {\\n                uri\\n                title\\n                srcSet\\n                sourceUrl\\n            }\\n            name\\n        }\\n    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\nvar Product = withRouter(function (props) {\n  console.warn(props);\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: \"Product\"\n  });\n});\n\nProduct.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var slug, id, PRODUCTS_QUERY, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            slug = context.query.slug;\n            id = slug ? parseInt(slug.split('-').pop()) : context.query.id;\n            PRODUCTS_QUERY = gql(_templateObject());\n            _context.next = 5;\n            return client.query({\n              query: PRODUCTS_QUERY,\n              variables: {\n                id: id\n              }\n            });\n\n          case 5:\n            res = _context.sent;\n            return _context.abrupt(\"return\", {\n              product: res.data.productBy\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Product;","map":null,"metadata":{},"sourceType":"module"}