{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\coolv\\\\OneDrive\\\\Desktop\\\\Plantisserie\\\\pages\\\\index.js\";\nimport Layout from '../components/Layout';\nimport Product from '../components/Product';\nimport { Card, Container, Col, Row } from 'react-bootstrap';\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport client from 'apollo-boost';\nconst PRODUCTS_QUERY = gql`query{\n        products(first: 20) {\n            nodes {\n                id\n                databaseId\n                averageRating\n                slug\n                description\n                image {\n                    uri\n                    title\n                    srcSet\n                    sourceUrl\n                }\n            name\n            }\n        }\n}`;\n\nconst Index = props => {\n  const {\n    products\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"product-container\",\n        children: products.length ? products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 50\n        }, this)) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\nIndex.getInitialProps = async () => {\n  const result = await client.query({\n    query: PRODUCTS_QUERY\n  });\n  return {\n    products: result.data.products.nodes\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/coolv/OneDrive/Desktop/Plantisserie/pages/index.js"],"names":["Layout","Product","Card","Container","Col","Row","ApolloClient","InMemoryCache","gql","client","PRODUCTS_QUERY","Index","props","products","length","map","product","id","getInitialProps","result","query","data","nodes"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA2C,iBAA3C;AAEA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,GAAtC,QAAiD,gBAAjD;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,cAAc,GAAGF,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAjBA;;AAmBA,MAAMG,KAAK,GAAKC,KAAF,IAAa;AAEvB,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AAEA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACMC,QAAQ,CAACC,MAAT,GACED,QAAQ,CAACE,GAAT,CAAcC,OAAO,iBAAI,QAAC,OAAD;AAA4B,UAAA,OAAO,EAAGA;AAAtC,WAAeA,OAAO,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA,gBAAzB,CADF,GAEE;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAfD;;AAiBAN,KAAK,CAACO,eAAN,GAAwB,YAAY;AAChC,QAAMC,MAAM,GAAG,MAAMV,MAAM,CAACW,KAAP,CAAc;AAAEA,IAAAA,KAAK,EAAEV;AAAT,GAAd,CAArB;AACA,SAAO;AACHG,IAAAA,QAAQ,EAAEM,MAAM,CAACE,IAAP,CAAYR,QAAZ,CAAqBS;AAD5B,GAAP;AAGH,CALD;;AAOA,eAAeX,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\n\r\nimport Product from '../components/Product';\r\n\r\nimport { Card, Container, Col, Row  } from 'react-bootstrap';\r\n\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\n\r\nimport client from 'apollo-boost';\r\n\r\nconst PRODUCTS_QUERY = gql`query{\r\n        products(first: 20) {\r\n            nodes {\r\n                id\r\n                databaseId\r\n                averageRating\r\n                slug\r\n                description\r\n                image {\r\n                    uri\r\n                    title\r\n                    srcSet\r\n                    sourceUrl\r\n                }\r\n            name\r\n            }\r\n        }\r\n}`;\r\n\r\nconst Index = ( props ) => {\r\n\r\n    const { products } = props;\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Row className=\"product-container\">\r\n                    { products.length ? (\r\n                        products.map( product => <Product key={ product.id } product={ product } /> )\r\n                    ) : ''}\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n    const result = await client.query( { query: PRODUCTS_QUERY })\r\n    return {\r\n        products: result.data.products.nodes\r\n    }\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}